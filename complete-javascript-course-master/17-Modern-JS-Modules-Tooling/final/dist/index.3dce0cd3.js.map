{"mappings":"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","sources":["clean.js"],"sourcesContent":["'strict mode';\n\nconst budget = Object.freeze([\n  { value: 250, description: 'Sold old TV 📺', user: 'jonas' },\n  { value: -45, description: 'Groceries 🥑', user: 'jonas' },\n  { value: 3500, description: 'Monthly salary 👩‍💻', user: 'jonas' },\n  { value: 300, description: 'Freelancing 👩‍💻', user: 'jonas' },\n  { value: -1100, description: 'New iPhone 📱', user: 'jonas' },\n  { value: -20, description: 'Candy 🍭', user: 'matilda' },\n  { value: -125, description: 'Toys 🚂', user: 'matilda' },\n  { value: -1800, description: 'New Laptop 💻', user: 'jonas' },\n]);\n\nconst spendingLimits = Object.freeze({\n  jonas: 1500,\n  matilda: 100,\n});\n// spendingLimits.jay = 200;\n\n// const limit = spendingLimits[user] ? spendingLimits[user] : 0;\nconst getLimit = (limits, user) => limits?.[user] ?? 0;\n\n// Pure function :D\nconst addExpense = function (\n  state,\n  limits,\n  value,\n  description,\n  user = 'jonas'\n) {\n  const cleanUser = user.toLowerCase();\n\n  return value <= getLimit(limits, cleanUser)\n    ? [...state, { value: -value, description, user: cleanUser }]\n    : state;\n};\n\nconst newBudget1 = addExpense(budget, spendingLimits, 10, 'Pizza 🍕');\nconst newBudget2 = addExpense(\n  newBudget1,\n  spendingLimits,\n  100,\n  'Going to movies 🍿',\n  'Matilda'\n);\nconst newBudget3 = addExpense(newBudget2, spendingLimits, 200, 'Stuff', 'Jay');\n\n// const checkExpenses2 = function (state, limits) {\n//   return state.map(entry => {\n//     return entry.value < -getLimit(limits, entry.user)\n//       ? { ...entry, flag: 'limit' }\n//       : entry;\n//   });\n//   // for (const entry of newBudget3)\n//   //   if (entry.value < -getLimit(limits, entry.user)) entry.flag = 'limit';\n// };\n\nconst checkExpenses = (state, limits) =>\n  state.map(entry =>\n    entry.value < -getLimit(limits, entry.user)\n      ? { ...entry, flag: 'limit' }\n      : entry\n  );\n\nconst finalBudget = checkExpenses(newBudget3, spendingLimits);\nconsole.log(finalBudget);\n\n// Impure\nconst logBigExpenses = function (state, bigLimit) {\n  const bigExpenses = state\n    .filter(entry => entry.value <= -bigLimit)\n    .map(entry => entry.description.slice(-2))\n    .join(' / ');\n  // .reduce((str, cur) => `${str} / ${cur.description.slice(-2)}`, '');\n\n  console.log(bigExpenses);\n\n  // let output = '';\n  // for (const entry of budget)\n  //   output +=\n  //     entry.value <= -bigLimit ? `${entry.description.slice(-2)} / ` : '';\n  // output = output.slice(0, -2); // Remove last '/ '\n  // console.log(output);\n};\n\nlogBigExpenses(finalBudget, 500);\n"],"names":[],"version":3,"file":"index.3dce0cd3.js.map","sourceRoot":"/__parcel_source_root/"}